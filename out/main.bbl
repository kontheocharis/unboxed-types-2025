\begin{thebibliography}{10}

\bibitem{rust-option}
std::option - {Rust}.
\newblock \url{https://doc.rust-lang.org/std/option/}.
\newblock Accessed: 2025-3-7.

\bibitem{Allais2023-zq}
Guillaume Allais.
\newblock Seamless, correct, and generic programming over serialised data.
\newblock {\em arXiv [cs.PL]}, 20~October 2023.

\bibitem{Annenkov2023-vk}
Danil Annenkov, Paolo Capriotti, Nicolai Kraus, and Christian Sattler.
\newblock Two-level type theory and applications.
\newblock {\em Math. Struct. Comput. Sci.}, 33(8):688--743, September 2023.

\bibitem{Atkey2018-pj}
Robert Atkey.
\newblock Syntax and semantics of quantitative type theory.
\newblock In {\em Proceedings of the 33rd Annual ACM/IEEE Symposium on Logic in
  Computer Science}, LICS '18, pages 56--65. Association for Computing
  Machinery.

\bibitem{Downen2024-nk}
Paul Downen.
\newblock Call-by-unboxed-value.
\newblock {\em Proc. ACM Program. Lang.}, 8(ICFP):845--879, 21~August 2024.

\bibitem{Eisenberg2017-pq}
Richard~A Eisenberg and Simon Peyton~Jones.
\newblock Levity polymorphism.
\newblock 52:525--539.

\bibitem{Jones1991-ik}
Simon L~Peyton Jones and John Launchbury.
\newblock Unboxed values as first class citizens in a non-strict functional
  language.
\newblock In {\em Functional Programming Languages and Computer Architecture},
  Lecture notes in computer science, pages 636--666. Springer Berlin
  Heidelberg, Berlin, Heidelberg, 1991.

\bibitem{Kaposi2024-db}
Ambrus Kaposi and Szumi Xie.
\newblock Second-order generalised algebraic theories: Signatures and
  first-order semantics.

\bibitem{Kovacs2022-rf}
Andr\'{a}s Kov\'{a}cs.
\newblock Staged compilation with two-level type theory.
\newblock {\em Proc. ACM Program. Lang.}, 6(ICFP):540--569, 29~August 2022.

\bibitem{Kovacs2024-hn}
Andr\'{a}s Kov\'{a}cs.
\newblock Closure-free functional programming in a two-level type theory.
\newblock {\em Proc. ACM Program. Lang.}, 8(ICFP):659--692, 15~August 2024.

\bibitem{Yallop2018-zw}
Jeremy Yallop, Tamara von Glehn, and Ohad Kammar.
\newblock Partially-static data as free extension of algebras.
\newblock {\em Proc. ACM Program. Lang.}, 2(ICFP):1--30, 30~July 2018.

\end{thebibliography}
